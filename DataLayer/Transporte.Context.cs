//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TransporteEntities : DbContext
    {
        public TransporteEntities()
            : base("name=TransporteEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<BranchOffices> BranchOffices { get; set; }
        public virtual DbSet<Cities> Cities { get; set; }
        public virtual DbSet<Customers> Customers { get; set; }
        public virtual DbSet<DropOffPackage> DropOffPackage { get; set; }
        public virtual DbSet<Employees> Employees { get; set; }
        public virtual DbSet<HomePickup> HomePickup { get; set; }
        public virtual DbSet<Licenses> Licenses { get; set; }
        public virtual DbSet<Packages> Packages { get; set; }
        public virtual DbSet<PackageType> PackageType { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<Shippments> Shippments { get; set; }
        public virtual DbSet<ShippmentStage> ShippmentStage { get; set; }
        public virtual DbSet<Stages> Stages { get; set; }
        public virtual DbSet<States> States { get; set; }
        public virtual DbSet<Vehicles> Vehicles { get; set; }
        public virtual DbSet<VehiclesCondition> VehiclesCondition { get; set; }
        public virtual DbSet<Zones> Zones { get; set; }
    
        public virtual int DeleteEmployee(Nullable<int> empID, ObjectParameter ret)
        {
            var empIDParameter = empID.HasValue ?
                new ObjectParameter("empID", empID) :
                new ObjectParameter("empID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEmployee", empIDParameter, ret);
        }
    
        public virtual int DeleteLicense(Nullable<int> cat, ObjectParameter ret)
        {
            var catParameter = cat.HasValue ?
                new ObjectParameter("Cat", cat) :
                new ObjectParameter("Cat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLicense", catParameter, ret);
        }
    
        public virtual int DeleteRole(Nullable<int> code, ObjectParameter ret)
        {
            var codeParameter = code.HasValue ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRole", codeParameter, ret);
        }
    
        public virtual int DeleteState(Nullable<int> iD, ObjectParameter ret)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteState", iDParameter, ret);
        }
    }
}
